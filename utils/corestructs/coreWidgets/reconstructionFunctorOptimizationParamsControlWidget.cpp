/**
 * \file reconstructionFunctorOptimizationParamsControlWidget.cpp
 * \attention This file is automatically generated and should not be in general modified manually
 *
 * \date MMM DD, 20YY
 * \author autoGenerator
 */

#include "reconstructionFunctorOptimizationParamsControlWidget.h"
#include "ui_reconstructionFunctorOptimizationParamsControlWidget.h"
#include <memory>
#include "qSettingsGetter.h"
#include "qSettingsSetter.h"


ReconstructionFunctorOptimizationParamsControlWidget::ReconstructionFunctorOptimizationParamsControlWidget(QWidget *parent, bool _autoInit, QString _rootPath)
    : ParametersControlWidgetBase(parent)
    , mUi(new Ui::ReconstructionFunctorOptimizationParamsControlWidget)
    , autoInit(_autoInit)
    , rootPath(_rootPath)
{
    mUi->setupUi(this);

    QObject::connect(mUi->nonDegenerateOrientationsCheckBox, SIGNAL(stateChanged(int)), this, SIGNAL(paramsChanged()));
    QObject::connect(mUi->degenerateOrientationsCheckBox, SIGNAL(stateChanged(int)), this, SIGNAL(paramsChanged()));
    QObject::connect(mUi->nonDegenerateTranslationsCheckBox, SIGNAL(stateChanged(int)), this, SIGNAL(paramsChanged()));
    QObject::connect(mUi->degenerateTranslationsCheckBox, SIGNAL(stateChanged(int)), this, SIGNAL(paramsChanged()));
    QObject::connect(mUi->focalsCheckBox, SIGNAL(stateChanged(int)), this, SIGNAL(paramsChanged()));
    QObject::connect(mUi->principalsCheckBox, SIGNAL(stateChanged(int)), this, SIGNAL(paramsChanged()));
    QObject::connect(mUi->pointsCheckBox, SIGNAL(stateChanged(int)), this, SIGNAL(paramsChanged()));
    QObject::connect(mUi->tuneGpsCheckBox, SIGNAL(stateChanged(int)), this, SIGNAL(paramsChanged()));
}

ReconstructionFunctorOptimizationParamsControlWidget::~ReconstructionFunctorOptimizationParamsControlWidget()
{

    delete mUi;
}

void ReconstructionFunctorOptimizationParamsControlWidget::loadParamWidget(WidgetLoader &loader)
{
    std::unique_ptr<ReconstructionFunctorOptimizationParams> params(createParameters());
    loader.loadParameters(*params, rootPath);
    setParameters(*params);
}

void ReconstructionFunctorOptimizationParamsControlWidget::saveParamWidget(WidgetSaver  &saver)
{
    saver.saveParameters(*std::unique_ptr<ReconstructionFunctorOptimizationParams>(createParameters()), rootPath);
}

void ReconstructionFunctorOptimizationParamsControlWidget::getParameters(ReconstructionFunctorOptimizationParams& params) const
{
    params = *std::unique_ptr<ReconstructionFunctorOptimizationParams>(createParameters());
}


ReconstructionFunctorOptimizationParams *ReconstructionFunctorOptimizationParamsControlWidget::createParameters() const
{

    /**
     * We should think of returning parameters by value or saving them in a preallocated place
     **/


    return new ReconstructionFunctorOptimizationParams(
          mUi->nonDegenerateOrientationsCheckBox->isChecked()
        , mUi->degenerateOrientationsCheckBox->isChecked()
        , mUi->nonDegenerateTranslationsCheckBox->isChecked()
        , mUi->degenerateTranslationsCheckBox->isChecked()
        , mUi->focalsCheckBox->isChecked()
        , mUi->principalsCheckBox->isChecked()
        , mUi->pointsCheckBox->isChecked()
        , mUi->tuneGpsCheckBox->isChecked()
    );
}

void ReconstructionFunctorOptimizationParamsControlWidget::setParameters(const ReconstructionFunctorOptimizationParams &input)
{
    // Block signals to send them all at once
    bool wasBlocked = blockSignals(true);
    mUi->nonDegenerateOrientationsCheckBox->setChecked(input.nonDegenerateOrientations());
    mUi->degenerateOrientationsCheckBox->setChecked(input.degenerateOrientations());
    mUi->nonDegenerateTranslationsCheckBox->setChecked(input.nonDegenerateTranslations());
    mUi->degenerateTranslationsCheckBox->setChecked(input.degenerateTranslations());
    mUi->focalsCheckBox->setChecked(input.focals());
    mUi->principalsCheckBox->setChecked(input.principals());
    mUi->pointsCheckBox->setChecked(input.points());
    mUi->tuneGpsCheckBox->setChecked(input.tuneGps());
    blockSignals(wasBlocked);
    emit paramsChanged();
}

void ReconstructionFunctorOptimizationParamsControlWidget::setParametersVirtual(void *input)
{
    // Modify widget parameters from outside
    ReconstructionFunctorOptimizationParams *inputCasted = static_cast<ReconstructionFunctorOptimizationParams *>(input);
    setParameters(*inputCasted);
}
