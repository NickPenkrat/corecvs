/**
 * \file presentationParameters.cpp
 * \attention This file is automatically generated and should not be in general modified manually
 *
 * \date MMM DD, 20YY
 * \author autoGenerator
 */

#include <vector>
#include <stddef.h>
#include "presentationParameters.h"

/**
 *  Looks extremely unsafe because it depends on the order of static initialization.
 *  Should check standard if this is ok
 *
 *  Also it's not clear why removing "= Reflection()" breaks the code;
 **/

namespace corecvs {
template<>
Reflection BaseReflection<PresentationParameters>::reflection = Reflection();
template<>
int BaseReflection<PresentationParameters>::dummy = PresentationParameters::staticInit();
} // namespace corecvs 

SUPPRESS_OFFSET_WARNING_BEGIN

int PresentationParameters::staticInit()
{

    ReflectionNaming &nameing = naming();
    nameing = ReflectionNaming(
        "Presentation Parameters",
        "Presentation parameters",
        ""
    );
     

    fields().push_back(
        new EnumField
        (
          PresentationParameters::OUTPUT_ID,
          offsetof(PresentationParameters, mOutput),
          0,
          "Output",
          "Output",
          "View - views are more or less self-explenatory",
          new EnumReflection(7
          , new EnumOption(0,"right Frame")
          , new EnumOption(1,"left Frame")
          , new EnumOption(2,"sidebyside stereo")
          , new EnumOption(3,"anaglyph RG")
          , new EnumOption(4,"anaglyph RC")
          , new EnumOption(5,"blend")
          , new EnumOption(6,"none")
          )
        )
    );
    fields().push_back(
        new EnumField
        (
          PresentationParameters::STEREO_ID,
          offsetof(PresentationParameters, mStereo),
          0,
          "Stereo",
          "Stereo",
          "Way to draw overlay with disparity information",
          new EnumReflection(6
          , new EnumOption(0,"dont show stereo")
          , new EnumOption(1,"fast large dots")
          , new EnumOption(2,"fast dots")
          , new EnumOption(3,"show lines stereo")
          , new EnumOption(4,"show all stereo")
          , new EnumOption(5,"show dots stereo")
          )
        )
    );
    fields().push_back(
        new EnumField
        (
          PresentationParameters::FLOW_ID,
          offsetof(PresentationParameters, mFlow),
          0,
          "Flow",
          "Flow",
          "Way to draw overlay with optical flow information",
          new EnumReflection(6
          , new EnumOption(0,"dont show flow")
          , new EnumOption(1,"fast colored dots")
          , new EnumOption(2,"show lines only")
          , new EnumOption(3,"show colored dots")
          , new EnumOption(4,"show colored lines")
          , new EnumOption(5,"show heat coloring")
          )
        )
    );
    fields().push_back(
        new BoolField
        (
          PresentationParameters::SHOWCLUSTERS_ID,
          offsetof(PresentationParameters, mShowClusters),
          false,
          "showClusters",
          "showClusters",
          "showClusters"
        )
    );
    fields().push_back(
        new BoolField
        (
          PresentationParameters::SHOWHISTOGRAM_ID,
          offsetof(PresentationParameters, mShowHistogram),
          true,
          "showHistogram",
          "showHistogram",
          "showHistogram"
        )
    );
    fields().push_back(
        new BoolField
        (
          PresentationParameters::AUTO_UPDATE_HISTOGRAM_ID,
          offsetof(PresentationParameters, mAutoUpdateHistogram),
          false,
          "Auto Update Histogram",
          "Auto Update Histogram",
          "Auto Update Histogram"
        )
    );
    fields().push_back(
        new BoolField
        (
          PresentationParameters::SHOWAREAOFINTEREST_ID,
          offsetof(PresentationParameters, mShowAreaOfInterest),
          true,
          "showAreaOfInterest",
          "showAreaOfInterest",
          "showAreaOfInterest"
        )
    );
    fields().push_back(
        new BoolField
        (
          PresentationParameters::PRODUCE3D_ID,
          offsetof(PresentationParameters, mProduce3D),
          true,
          "produce3D",
          "produce3D",
          "produce3D"
        )
    );
    fields().push_back(
        new BoolField
        (
          PresentationParameters::PRODUCE6D_ID,
          offsetof(PresentationParameters, mProduce6D),
          false,
          "produce6D",
          "produce6D",
          "produce6D"
        )
    );
    fields().push_back(
        new BoolField
        (
          PresentationParameters::DUMP3D_ID,
          offsetof(PresentationParameters, mDump3D),
          false,
          "dump3D",
          "dump3D",
          "dump3D"
        )
    );
   return 0;
}

SUPPRESS_OFFSET_WARNING_END


