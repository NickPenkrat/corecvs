/**
 * \file mergerControlWidget.cpp
 * \attention This file is automatically generated and should not be in general modified manually
 *
 * \date MMM DD, 20YY
 * \author autoGenerator
 */

#include "mergerControlWidget.h"
#include "ui_mergerControlWidget.h"
#include <memory>
#include "qSettingsGetter.h"
#include "qSettingsSetter.h"

#include "euclidianMoveParametersControlWidget.h"
#include "euclidianMoveParametersControlWidget.h"
#include "euclidianMoveParametersControlWidget.h"
#include "euclidianMoveParametersControlWidget.h"

MergerControlWidget::MergerControlWidget(QWidget *parent, bool _autoInit, QString _rootPath)
    : ParametersControlWidgetBase(parent)
    , mUi(new Ui::MergerControlWidget)
    , autoInit(_autoInit)
    , rootPath(_rootPath)
{
    mUi->setupUi(this);

    QObject::connect(mUi->undistMethodSpinBox, SIGNAL(valueChanged(int)), this, SIGNAL(paramsChanged()));
    QObject::connect(mUi->frameToUndistSpinBox, SIGNAL(valueChanged(int)), this, SIGNAL(paramsChanged()));
    QObject::connect(mUi->fOVSpinBox, SIGNAL(valueChanged(double)), this, SIGNAL(paramsChanged()));
    QObject::connect(mUi->outSizeHSpinBox, SIGNAL(valueChanged(double)), this, SIGNAL(paramsChanged()));
    QObject::connect(mUi->outPhySizeLSpinBox, SIGNAL(valueChanged(double)), this, SIGNAL(paramsChanged()));
    QObject::connect(mUi->outPhySizeWSpinBox, SIGNAL(valueChanged(double)), this, SIGNAL(paramsChanged()));
    QObject::connect(mUi->groundZSpinBox, SIGNAL(valueChanged(double)), this, SIGNAL(paramsChanged()));
    QObject::connect(mUi->switch1CheckBox, SIGNAL(stateChanged(int)), this, SIGNAL(paramsChanged()));
    QObject::connect(mUi->pos1ControlWidget, SIGNAL(paramsChanged()), this, SIGNAL(paramsChanged()));
    QObject::connect(mUi->switch2CheckBox, SIGNAL(stateChanged(int)), this, SIGNAL(paramsChanged()));
    QObject::connect(mUi->pos2ControlWidget, SIGNAL(paramsChanged()), this, SIGNAL(paramsChanged()));
    QObject::connect(mUi->switch3CheckBox, SIGNAL(stateChanged(int)), this, SIGNAL(paramsChanged()));
    QObject::connect(mUi->pos3ControlWidget, SIGNAL(paramsChanged()), this, SIGNAL(paramsChanged()));
    QObject::connect(mUi->switch4CheckBox, SIGNAL(stateChanged(int)), this, SIGNAL(paramsChanged()));
    QObject::connect(mUi->pos4ControlWidget, SIGNAL(paramsChanged()), this, SIGNAL(paramsChanged()));
}

MergerControlWidget::~MergerControlWidget()
{

    delete mUi;
}

void MergerControlWidget::loadParamWidget(WidgetLoader &loader)
{
    std::unique_ptr<Merger> params(createParameters());
    loader.loadParameters(*params, rootPath);
    setParameters(*params);
}

void MergerControlWidget::saveParamWidget(WidgetSaver  &saver)
{
    saver.saveParameters(*std::unique_ptr<Merger>(createParameters()), rootPath);
}

void MergerControlWidget::getParameters(Merger& params) const
{
    params = *std::unique_ptr<Merger>(createParameters());
}


Merger *MergerControlWidget::createParameters() const
{

    /**
     * We should think of returning parameters by value or saving them in a preallocated place
     **/


    return new Merger(
          mUi->undistMethodSpinBox->value()
        , mUi->frameToUndistSpinBox->value()
        , mUi->fOVSpinBox->value()
        , mUi->outSizeHSpinBox->value()
        , mUi->outPhySizeLSpinBox->value()
        , mUi->outPhySizeWSpinBox->value()
        , mUi->groundZSpinBox->value()
        , mUi->switch1CheckBox->isChecked()
        , *std::unique_ptr<EuclidianMoveParameters>(mUi->pos1ControlWidget->createParameters())
        , mUi->switch2CheckBox->isChecked()
        , *std::unique_ptr<EuclidianMoveParameters>(mUi->pos2ControlWidget->createParameters())
        , mUi->switch3CheckBox->isChecked()
        , *std::unique_ptr<EuclidianMoveParameters>(mUi->pos3ControlWidget->createParameters())
        , mUi->switch4CheckBox->isChecked()
        , *std::unique_ptr<EuclidianMoveParameters>(mUi->pos4ControlWidget->createParameters())
    );
}

void MergerControlWidget::setParameters(const Merger &input)
{
    // Block signals to send them all at once
    bool wasBlocked = blockSignals(true);
    mUi->undistMethodSpinBox->setValue(input.undistMethod());
    mUi->frameToUndistSpinBox->setValue(input.frameToUndist());
    mUi->fOVSpinBox->setValue(input.fOV());
    mUi->outSizeHSpinBox->setValue(input.outSizeH());
    mUi->outPhySizeLSpinBox->setValue(input.outPhySizeL());
    mUi->outPhySizeWSpinBox->setValue(input.outPhySizeW());
    mUi->groundZSpinBox->setValue(input.groundZ());
    mUi->switch1CheckBox->setChecked(input.switch1());
    mUi->pos1ControlWidget->setParameters(input.pos1());
    mUi->switch2CheckBox->setChecked(input.switch2());
    mUi->pos2ControlWidget->setParameters(input.pos2());
    mUi->switch3CheckBox->setChecked(input.switch3());
    mUi->pos3ControlWidget->setParameters(input.pos3());
    mUi->switch4CheckBox->setChecked(input.switch4());
    mUi->pos4ControlWidget->setParameters(input.pos4());
    blockSignals(wasBlocked);
    emit paramsChanged();
}

void MergerControlWidget::setParametersVirtual(void *input)
{
    // Modify widget parameters from outside
    Merger *inputCasted = static_cast<Merger *>(input);
    setParameters(*inputCasted);
}
