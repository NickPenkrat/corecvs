/**
 * \file vector2dParametersControlWidget.cpp
 * \attention This file is automatically generated and should not be in general modified manually
 *
 * \date MMM DD, 20YY
 * \author autoGenerator
 */

#include "vector2dParametersControlWidget.h"
#include "ui_vector2dParametersControlWidget.h"
#include <memory>
#include "qSettingsGetter.h"
#include "qSettingsSetter.h"


Vector2dParametersControlWidget::Vector2dParametersControlWidget(QWidget *parent, bool _autoInit, QString _rootPath)
    : ParametersControlWidgetBase(parent)
    , mUi(new Ui::Vector2dParametersControlWidget)
    , autoInit(_autoInit)
    , rootPath(_rootPath)
{
    mUi->setupUi(this);

    QObject::connect(mUi->xSpinBox, SIGNAL(valueChanged(double)), this, SIGNAL(paramsChanged()));
    QObject::connect(mUi->ySpinBox, SIGNAL(valueChanged(double)), this, SIGNAL(paramsChanged()));
}

Vector2dParametersControlWidget::~Vector2dParametersControlWidget()
{

    delete mUi;
}

void Vector2dParametersControlWidget::loadParamWidget(WidgetLoader &loader)
{
    std::unique_ptr<Vector2dParameters> params(createParameters());
    loader.loadParameters(*params, rootPath);
    setParameters(*params);
}

void Vector2dParametersControlWidget::saveParamWidget(WidgetSaver  &saver)
{
    saver.saveParameters(*std::unique_ptr<Vector2dParameters>(createParameters()), rootPath);
}

void Vector2dParametersControlWidget::getParameters(Vector2dParameters& params) const
{
    params = *std::unique_ptr<Vector2dParameters>(createParameters());
}


Vector2dParameters *Vector2dParametersControlWidget::createParameters() const
{

    /**
     * We should think of returning parameters by value or saving them in a preallocated place
     **/


    return new Vector2dParameters(
          mUi->xSpinBox->value()
        , mUi->ySpinBox->value()
    );
}

void Vector2dParametersControlWidget::setParameters(const Vector2dParameters &input)
{
    // Block signals to send them all at once
    bool wasBlocked = blockSignals(true);
    mUi->xSpinBox->setValue(input.x());
    mUi->ySpinBox->setValue(input.y());
    blockSignals(wasBlocked);
    emit paramsChanged();
}

void Vector2dParametersControlWidget::setParametersVirtual(void *input)
{
    // Modify widget parameters from outside
    Vector2dParameters *inputCasted = static_cast<Vector2dParameters *>(input);
    setParameters(*inputCasted);
}
