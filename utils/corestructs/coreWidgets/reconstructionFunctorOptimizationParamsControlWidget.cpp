/**
 * \file reconstructionFunctorOptimizationParamsControlWidget.cpp
 * \attention This file is automatically generated and should not be in general modified manually
 *
 * \date MMM DD, 20YY
 * \author autoGenerator
 */

#include "reconstructionFunctorOptimizationParamsControlWidget.h"
#include "ui_reconstructionFunctorOptimizationParamsControlWidget.h"
#include "qSettingsGetter.h"
#include "qSettingsSetter.h"


ReconstructionFunctorOptimizationParamsControlWidget::ReconstructionFunctorOptimizationParamsControlWidget(QWidget *parent, bool _autoInit, QString _rootPath)
    : ParametersControlWidgetBase(parent)
    , mUi(new Ui::ReconstructionFunctorOptimizationParamsControlWidget)
    , autoInit(_autoInit)
    , rootPath(_rootPath)
{
    mUi->setupUi(this);

    QObject::connect(mUi->nON_DEGENERATE_ORIENTATIONSCheckBox, SIGNAL(stateChanged(int)), this, SIGNAL(paramsChanged()));
    QObject::connect(mUi->dEGENERATE_ORIENTATIONSCheckBox, SIGNAL(stateChanged(int)), this, SIGNAL(paramsChanged()));
    QObject::connect(mUi->nON_DEGENERATE_TRANSLATIONSCheckBox, SIGNAL(stateChanged(int)), this, SIGNAL(paramsChanged()));
    QObject::connect(mUi->dEGENERATE_TRANSLATIONSCheckBox, SIGNAL(stateChanged(int)), this, SIGNAL(paramsChanged()));
    QObject::connect(mUi->fOCALSCheckBox, SIGNAL(stateChanged(int)), this, SIGNAL(paramsChanged()));
    QObject::connect(mUi->pRINCIPALSCheckBox, SIGNAL(stateChanged(int)), this, SIGNAL(paramsChanged()));
    QObject::connect(mUi->pOINTSCheckBox, SIGNAL(stateChanged(int)), this, SIGNAL(paramsChanged()));
    QObject::connect(mUi->tUNE_GPSCheckBox, SIGNAL(stateChanged(int)), this, SIGNAL(paramsChanged()));
}

ReconstructionFunctorOptimizationParamsControlWidget::~ReconstructionFunctorOptimizationParamsControlWidget()
{

    delete mUi;
}

void ReconstructionFunctorOptimizationParamsControlWidget::loadParamWidget(WidgetLoader &loader)
{
    ReconstructionFunctorOptimizationParams *params = createParameters();
    loader.loadParameters(*params, rootPath);
    setParameters(*params);
    delete params;
}

void ReconstructionFunctorOptimizationParamsControlWidget::saveParamWidget(WidgetSaver  &saver)
{
    ReconstructionFunctorOptimizationParams *params = createParameters();
    saver.saveParameters(*params, rootPath);
    delete params;
}

 /* Composite fields are NOT supported so far */
void ReconstructionFunctorOptimizationParamsControlWidget::getParameters(ReconstructionFunctorOptimizationParams& params) const
{

    params.setNON_DEGENERATE_ORIENTATIONS(mUi->nON_DEGENERATE_ORIENTATIONSCheckBox->isChecked());
    params.setDEGENERATE_ORIENTATIONS(mUi->dEGENERATE_ORIENTATIONSCheckBox->isChecked());
    params.setNON_DEGENERATE_TRANSLATIONS(mUi->nON_DEGENERATE_TRANSLATIONSCheckBox->isChecked());
    params.setDEGENERATE_TRANSLATIONS(mUi->dEGENERATE_TRANSLATIONSCheckBox->isChecked());
    params.setFOCALS           (mUi->fOCALSCheckBox->isChecked());
    params.setPRINCIPALS       (mUi->pRINCIPALSCheckBox->isChecked());
    params.setPOINTS           (mUi->pOINTSCheckBox->isChecked());
    params.setTUNE_GPS         (mUi->tUNE_GPSCheckBox->isChecked());

}

ReconstructionFunctorOptimizationParams *ReconstructionFunctorOptimizationParamsControlWidget::createParameters() const
{

    /**
     * We should think of returning parameters by value or saving them in a preallocated place
     **/


    ReconstructionFunctorOptimizationParams *result = new ReconstructionFunctorOptimizationParams(
          mUi->nON_DEGENERATE_ORIENTATIONSCheckBox->isChecked()
        , mUi->dEGENERATE_ORIENTATIONSCheckBox->isChecked()
        , mUi->nON_DEGENERATE_TRANSLATIONSCheckBox->isChecked()
        , mUi->dEGENERATE_TRANSLATIONSCheckBox->isChecked()
        , mUi->fOCALSCheckBox->isChecked()
        , mUi->pRINCIPALSCheckBox->isChecked()
        , mUi->pOINTSCheckBox->isChecked()
        , mUi->tUNE_GPSCheckBox->isChecked()
    );
    return result;
}

void ReconstructionFunctorOptimizationParamsControlWidget::setParameters(const ReconstructionFunctorOptimizationParams &input)
{
    // Block signals to send them all at once
    bool wasBlocked = blockSignals(true);
    mUi->nON_DEGENERATE_ORIENTATIONSCheckBox->setChecked(input.nON_DEGENERATE_ORIENTATIONS());
    mUi->dEGENERATE_ORIENTATIONSCheckBox->setChecked(input.dEGENERATE_ORIENTATIONS());
    mUi->nON_DEGENERATE_TRANSLATIONSCheckBox->setChecked(input.nON_DEGENERATE_TRANSLATIONS());
    mUi->dEGENERATE_TRANSLATIONSCheckBox->setChecked(input.dEGENERATE_TRANSLATIONS());
    mUi->fOCALSCheckBox->setChecked(input.fOCALS());
    mUi->pRINCIPALSCheckBox->setChecked(input.pRINCIPALS());
    mUi->pOINTSCheckBox->setChecked(input.pOINTS());
    mUi->tUNE_GPSCheckBox->setChecked(input.tUNE_GPS());
    blockSignals(wasBlocked);
    emit paramsChanged();
}

void ReconstructionFunctorOptimizationParamsControlWidget::setParametersVirtual(void *input)
{
    // Modify widget parameters from outside
    ReconstructionFunctorOptimizationParams *inputCasted = static_cast<ReconstructionFunctorOptimizationParams *>(input);
    setParameters(*inputCasted);
}
