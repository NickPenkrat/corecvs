/**
 * \file merger.cpp
 * \attention This file is automatically generated and should not be in general modified manually
 *
 * \date MMM DD, 20YY
 * \author autoGenerator
 */

#include <vector>
#include <stddef.h>
#include "merger.h"

/**
 *  Looks extremely unsafe because it depends on the order of static initialization.
 *  Should check standard if this is ok
 *
 *  Also it's not clear why removing "= Reflection()" breaks the code;
 **/

namespace corecvs {
template<>
Reflection BaseReflection<Merger>::reflection = Reflection();
template<>
int BaseReflection<Merger>::dummy = Merger::staticInit();
} // namespace corecvs 

SUPPRESS_OFFSET_WARNING_BEGIN


using namespace corecvs;

int Merger::staticInit()
{

    ReflectionNaming &nameing = naming();
    nameing = ReflectionNaming(
        "Merger",
        "Merger parameters",
        ""
    );

     getReflection()->objectSize = sizeof(Merger);
     

    StringField* field0 = new StringField
        (
          Merger::PATH_ID,
          offsetof(Merger, mPath),
          "",
          "path",
          "path",
          "path"
        );
    fields().push_back(field0);
    /*  */ 
    StringField* field1 = new StringField
        (
          Merger::FILETEMPLATE_ID,
          offsetof(Merger, mFileTemplate),
          "sequence_%04d_c%d.pgm",
          "fileTemplate",
          "fileTemplate",
          "fileTemplate"
        );
    fields().push_back(field1);
    /*  */ 
    ReflectionDirectory &directory = *ReflectionDirectoryHolder::getReflectionDirectory();
    directory[std::string("Merger")]= &reflection;
   return 0;
}
int Merger::relinkCompositeFields()
{
   return 0;
}

SUPPRESS_OFFSET_WARNING_END


