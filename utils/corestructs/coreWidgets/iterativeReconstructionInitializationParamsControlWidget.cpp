/**
 * \file iterativeReconstructionInitializationParamsControlWidget.cpp
 * \attention This file is automatically generated and should not be in general modified manually
 *
 * \date MMM DD, 20YY
 * \author autoGenerator
 */

#include "iterativeReconstructionInitializationParamsControlWidget.h"
#include "ui_iterativeReconstructionInitializationParamsControlWidget.h"
#include <memory>
#include "qSettingsGetter.h"
#include "qSettingsSetter.h"


IterativeReconstructionInitializationParamsControlWidget::IterativeReconstructionInitializationParamsControlWidget(QWidget *parent, bool _autoInit, QString _rootPath)
    : ParametersControlWidgetBase(parent)
    , mUi(new Ui::IterativeReconstructionInitializationParamsControlWidget)
    , autoInit(_autoInit)
    , rootPath(_rootPath)
{
    mUi->setupUi(this);

    QObject::connect(mUi->b2bRansacP5RPThresholdSpinBox, SIGNAL(valueChanged(double)), this, SIGNAL(paramsChanged()));
    QObject::connect(mUi->inlierP5RPThresholdSpinBox, SIGNAL(valueChanged(double)), this, SIGNAL(paramsChanged()));
    QObject::connect(mUi->maxEssentialRansacIterationsSpinBox, SIGNAL(valueChanged(int)), this, SIGNAL(paramsChanged()));
    QObject::connect(mUi->b2bRansacP6RPThresholdSpinBox, SIGNAL(valueChanged(double)), this, SIGNAL(paramsChanged()));
    QObject::connect(mUi->runEssentialFilteringCheckBox, SIGNAL(stateChanged(int)), this, SIGNAL(paramsChanged()));
    QObject::connect(mUi->essentialTargetGammaSpinBox, SIGNAL(valueChanged(double)), this, SIGNAL(paramsChanged()));
    QObject::connect(mUi->maxP6RPIterationsSpinBox, SIGNAL(valueChanged(int)), this, SIGNAL(paramsChanged()));
    QObject::connect(mUi->inlierP6RPThresholdSpinBox, SIGNAL(valueChanged(double)), this, SIGNAL(paramsChanged()));
    QObject::connect(mUi->gammaP6RPSpinBox, SIGNAL(valueChanged(double)), this, SIGNAL(paramsChanged()));
}

IterativeReconstructionInitializationParamsControlWidget::~IterativeReconstructionInitializationParamsControlWidget()
{

    delete mUi;
}

void IterativeReconstructionInitializationParamsControlWidget::loadParamWidget(WidgetLoader &loader)
{
    std::unique_ptr<IterativeReconstructionInitializationParams> params(createParameters());
    loader.loadParameters(*params, rootPath);
    setParameters(*params);
}

void IterativeReconstructionInitializationParamsControlWidget::saveParamWidget(WidgetSaver  &saver)
{
    saver.saveParameters(*std::unique_ptr<IterativeReconstructionInitializationParams>(createParameters()), rootPath);
}

void IterativeReconstructionInitializationParamsControlWidget::getParameters(IterativeReconstructionInitializationParams& params) const
{
    params = *std::unique_ptr<IterativeReconstructionInitializationParams>(createParameters());
}


IterativeReconstructionInitializationParams *IterativeReconstructionInitializationParamsControlWidget::createParameters() const
{

    /**
     * We should think of returning parameters by value or saving them in a preallocated place
     **/


    return new IterativeReconstructionInitializationParams(
          mUi->b2bRansacP5RPThresholdSpinBox->value()
        , mUi->inlierP5RPThresholdSpinBox->value()
        , mUi->maxEssentialRansacIterationsSpinBox->value()
        , mUi->b2bRansacP6RPThresholdSpinBox->value()
        , mUi->runEssentialFilteringCheckBox->isChecked()
        , mUi->essentialTargetGammaSpinBox->value()
        , mUi->maxP6RPIterationsSpinBox->value()
        , mUi->inlierP6RPThresholdSpinBox->value()
        , mUi->gammaP6RPSpinBox->value()
    );
}

void IterativeReconstructionInitializationParamsControlWidget::setParameters(const IterativeReconstructionInitializationParams &input)
{
    // Block signals to send them all at once
    bool wasBlocked = blockSignals(true);
    mUi->b2bRansacP5RPThresholdSpinBox->setValue(input.b2bRansacP5RPThreshold());
    mUi->inlierP5RPThresholdSpinBox->setValue(input.inlierP5RPThreshold());
    mUi->maxEssentialRansacIterationsSpinBox->setValue(input.maxEssentialRansacIterations());
    mUi->b2bRansacP6RPThresholdSpinBox->setValue(input.b2bRansacP6RPThreshold());
    mUi->runEssentialFilteringCheckBox->setChecked(input.runEssentialFiltering());
    mUi->essentialTargetGammaSpinBox->setValue(input.essentialTargetGamma());
    mUi->maxP6RPIterationsSpinBox->setValue(input.maxP6RPIterations());
    mUi->inlierP6RPThresholdSpinBox->setValue(input.inlierP6RPThreshold());
    mUi->gammaP6RPSpinBox->setValue(input.gammaP6RP());
    blockSignals(wasBlocked);
    emit paramsChanged();
}

void IterativeReconstructionInitializationParamsControlWidget::setParametersVirtual(void *input)
{
    // Modify widget parameters from outside
    IterativeReconstructionInitializationParams *inputCasted = static_cast<IterativeReconstructionInitializationParams *>(input);
    setParameters(*inputCasted);
}
