#ifndef PHOTOSTATION_PLACER_OPTIMIZATION_ERROR_TYPE_H_
#define PHOTOSTATION_PLACER_OPTIMIZATION_ERROR_TYPE_H_
/**
 * \file photostationPlacerOptimizationErrorType.h
 * \attention This file is automatically generated and should not be in general modified manually
 *
 * \date MMM DD, 20YY
 * \author autoGenerator
 */

/**
 * Helper namespace to hide PhotostationPlacerOptimizationErrorType enum from global context.
 */

namespace PhotostationPlacerOptimizationErrorType {

/** 
 * \brief Photostation Placer Optimization Error Type 
 * Photostation Placer Optimization Error Type 
 */
enum PhotostationPlacerOptimizationErrorType {
    /** 
     * \brief REPROJECTION 
     * REPROJECTION 
     */
    REPROJECTION = 0,
    /** 
     * \brief ANGULAR 
     * ANGULAR 
     */
    ANGULAR = 1,
    /** 
     * \brief CROSS_PRODUCT 
     * CROSS_PRODUCT 
     */
    CROSS_PRODUCT = 2,
    /** 
     * \brief RAY_DIFF 
     * RAY_DIFF 
     */
    RAY_DIFF = 3,
    /** 
     * \brief Last virtual option to run cycles to
     */
    PHOTOSTATION_PLACER_OPTIMIZATION_ERROR_TYPE_LAST
};


static inline const char *getName(const PhotostationPlacerOptimizationErrorType &value)
{
    switch (value) 
    {
     case REPROJECTION : return "REPROJECTION"; break ;
     case ANGULAR : return "ANGULAR"; break ;
     case CROSS_PRODUCT : return "CROSS_PRODUCT"; break ;
     case RAY_DIFF : return "RAY_DIFF"; break ;
     default : return "Not in range"; break ;
     
    }
    return "Not in range";
}

} //namespace PhotostationPlacerOptimizationErrorType

#endif  //PHOTOSTATION_PLACER_OPTIMIZATION_ERROR_TYPE_H_
