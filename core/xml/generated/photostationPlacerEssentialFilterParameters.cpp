/**
 * \file photostationPlacerEssentialFilterParameters.cpp
 * \attention This file is automatically generated and should not be in general modified manually
 *
 * \date MMM DD, 20YY
 * \author autoGenerator
 */

#include <vector>
#include <stddef.h>
#include "photostationPlacerEssentialFilterParameters.h"

/**
 *  Looks extremely unsafe because it depends on the order of static initialization.
 *  Should check standard if this is ok
 *
 *  Also it's not clear why removing "= Reflection()" breaks the code;
 **/

namespace corecvs {
template<>
Reflection BaseReflection<PhotostationPlacerEssentialFilterParameters>::reflection = Reflection();
template<>
int BaseReflection<PhotostationPlacerEssentialFilterParameters>::dummy = PhotostationPlacerEssentialFilterParameters::staticInit();
} // namespace corecvs 

SUPPRESS_OFFSET_WARNING_BEGIN

int PhotostationPlacerEssentialFilterParameters::staticInit()
{

    ReflectionNaming &nameing = naming();
    nameing = ReflectionNaming(
        "Photostation Placer Essential Filter Parameters",
        "Photostation Placer Essential Filter Parameters",
        ""
    );
     

    fields().push_back(
        new DoubleField
        (
          PhotostationPlacerEssentialFilterParameters::B2BRANSACP5RPTHRESHOLD_ID,
          offsetof(PhotostationPlacerEssentialFilterParameters, mB2bRansacP5RPThreshold),
          0.8,
          "b2bRansacP5RPThreshold",
          "b2bRansacP5RPThreshold",
          "Best-2nd best essential estimator threshold",
          true,
         -50000,
         50000
        )
    );
    fields().push_back(
        new DoubleField
        (
          PhotostationPlacerEssentialFilterParameters::INLIERP5RPTHRESHOLD_ID,
          offsetof(PhotostationPlacerEssentialFilterParameters, mInlierP5RPThreshold),
          5,
          "inlierP5RPThreshold",
          "inlierP5RPThreshold",
          "Inlier threshold",
          true,
         -50000,
         50000
        )
    );
    fields().push_back(
        new IntField
        (
          PhotostationPlacerEssentialFilterParameters::MAXESSENTIALRANSACITERATIONS_ID,
          offsetof(PhotostationPlacerEssentialFilterParameters, mMaxEssentialRansacIterations),
          600000,
          "maxEssentialRansacIterations",
          "maxEssentialRansacIterations",
          "Maximal essential estimator rounds",
          true,
         0,
         5000000
        )
    );
    fields().push_back(
        new DoubleField
        (
          PhotostationPlacerEssentialFilterParameters::B2BRANSACP6RPTHRESHOLD_ID,
          offsetof(PhotostationPlacerEssentialFilterParameters, mB2bRansacP6RPThreshold),
          0.8,
          "b2bRansacP6RPThreshold",
          "b2bRansacP6RPThreshold",
          "Best-2nd best relative pose estimator threshold",
          true,
         -50000,
         50000
        )
    );
    fields().push_back(
        new BoolField
        (
          PhotostationPlacerEssentialFilterParameters::RUNESSENTIALFILTERING_ID,
          offsetof(PhotostationPlacerEssentialFilterParameters, mRunEssentialFiltering),
          true,
          "runEssentialFiltering",
          "runEssentialFiltering",
          "Run essential filtering prior relative pose estimation"
        )
    );
    fields().push_back(
        new DoubleField
        (
          PhotostationPlacerEssentialFilterParameters::ESSENTIALTARGETGAMMA_ID,
          offsetof(PhotostationPlacerEssentialFilterParameters, mEssentialTargetGamma),
          0.01,
          "essentialTargetGamma",
          "essentialTargetGamma",
          "essentialTargetGamma",
          true,
         0,
         50000
        )
    );
   return 0;
}

SUPPRESS_OFFSET_WARNING_END


