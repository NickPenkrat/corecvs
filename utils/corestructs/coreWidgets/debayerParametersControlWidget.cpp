/**
 * \file debayerParametersControlWidget.cpp
 * \attention This file is automatically generated and should not be in general modified manually
 *
 * \date MMM DD, 20YY
 * \author autoGenerator
 */

#include "debayerParametersControlWidget.h"
#include "ui_debayerParametersControlWidget.h"
#include "qSettingsGetter.h"
#include "qSettingsSetter.h"


DebayerParametersControlWidget::DebayerParametersControlWidget(QWidget *parent, bool _autoInit, QString _rootPath)
    : ParametersControlWidgetBase(parent)
    , mUi(new Ui::DebayerParametersControlWidget)
    , autoInit(_autoInit)
    , rootPath(_rootPath)
{
    mUi->setupUi(this);

    QObject::connect(mUi->methodComboBox, SIGNAL(currentIndexChanged(int)), this, SIGNAL(paramsChanged()));
    QObject::connect(mUi->bayerPosSpinBox, SIGNAL(valueChanged(int)), this, SIGNAL(paramsChanged()));
}

DebayerParametersControlWidget::~DebayerParametersControlWidget()
{

    delete mUi;
}

void DebayerParametersControlWidget::loadParamWidget(WidgetLoader &loader)
{
    DebayerParameters *params = createParameters();
    loader.loadParameters(*params, rootPath);
    setParameters(*params);
    delete params;
}

void DebayerParametersControlWidget::saveParamWidget(WidgetSaver  &saver)
{
    DebayerParameters *params = createParameters();
    saver.saveParameters(*params, rootPath);
    delete params;
}

 /* Composite fields are NOT supported so far */
void DebayerParametersControlWidget::getParameters(DebayerParameters& params) const
{

    params.setMethod           (static_cast<DebayerMethod::DebayerMethod>(mUi->methodComboBox->currentIndex()));
    params.setBayerPos         (mUi->bayerPosSpinBox->value());

}

DebayerParameters *DebayerParametersControlWidget::createParameters() const
{

    /**
     * We should think of returning parameters by value or saving them in a preallocated place
     **/


    DebayerParameters *result = new DebayerParameters(
          static_cast<DebayerMethod::DebayerMethod>(mUi->methodComboBox->currentIndex())
        , mUi->bayerPosSpinBox->value()
    );
    return result;
}

void DebayerParametersControlWidget::setParameters(const DebayerParameters &input)
{
    // Block signals to send them all at once
    bool wasBlocked = blockSignals(true);
    mUi->methodComboBox->setCurrentIndex(input.method());
    mUi->bayerPosSpinBox->setValue(input.bayerPos());
    blockSignals(wasBlocked);
    emit paramsChanged();
}

void DebayerParametersControlWidget::setParametersVirtual(void *input)
{
    // Modify widget parameters from outside
    DebayerParameters *inputCasted = static_cast<DebayerParameters *>(input);
    setParameters(*inputCasted);
}
